{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/abhinandan/Texts/mocktest/mocktest-web/src/screens/TestScreen/index.js\";\nimport React from 'react';\nimport './index.css';\nimport API from '../../utils/API';\nimport { QuestionCard } from '../../components/QuestionCard';\nimport { ButtonBar } from '../../components/ButtonBar';\nexport default class TestScreen extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      API.get('mockTest/').then(res => {\n        this.setState({\n          questions: res.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.optionPressed = optionNumber => {\n      this.setState({\n        selectedOptionNumber: optionNumber\n      });\n    };\n\n    this.nextPressed = () => {\n      const {\n        currentIndex\n      } = this.state;\n      this.setState({\n        currentIndex: currentIndex + 1,\n        selectedOptionNumber: -1\n      });\n    };\n\n    this.state = {\n      questions: [],\n      currentIndex: 0,\n      isLoading: true\n    };\n  }\n\n  render() {\n    const {\n      isLoading,\n      questions,\n      currentIndex,\n      selectedOptionNumber\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ButtonBar, {\n          nextPressed: this.nextPressed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(QuestionCard, {\n          questionDetails: questions[currentIndex],\n          selectedOptionNumber: selectedOptionNumber,\n          optionPressed: this.optionPressed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/abhinandan/Texts/mocktest/mocktest-web/src/screens/TestScreen/index.js"],"names":["React","API","QuestionCard","ButtonBar","TestScreen","PureComponent","constructor","props","componentDidMount","get","then","res","setState","questions","data","isLoading","optionPressed","optionNumber","selectedOptionNumber","nextPressed","currentIndex","state","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,SAAT,QAA0B,4BAA1B;AAEA,eAAe,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,aAA/B,CAA6C;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,iBATmB,GASC,MAAM;AACtBP,MAAAA,GAAG,CAACQ,GAAJ,CAAQ,WAAR,EACKC,IADL,CACUC,GAAG,IAAI;AACT,aAAKC,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAEF,GAAG,CAACG,IAAjB;AAAuBC,UAAAA,SAAS,EAAE;AAAlC,SAAd;AACH,OAHL;AAKH,KAfkB;;AAAA,SAiBnBC,aAjBmB,GAiBFC,YAAD,IAAkB;AAC9B,WAAKL,QAAL,CAAc;AAAEM,QAAAA,oBAAoB,EAAED;AAAxB,OAAd;AACH,KAnBkB;;AAAA,SAqBnBE,WArBmB,GAqBL,MAAM;AAChB,YAAM;AAAEC,QAAAA;AAAF,UAAmB,KAAKC,KAA9B;AACA,WAAKT,QAAL,CAAc;AAAEQ,QAAAA,YAAY,EAAEA,YAAY,GAAG,CAA/B;AAAkCF,QAAAA,oBAAoB,EAAE,CAAC;AAAzD,OAAd;AACH,KAxBkB;;AAEf,SAAKG,KAAL,GAAa;AACTR,MAAAA,SAAS,EAAE,EADF;AAETO,MAAAA,YAAY,EAAE,CAFL;AAGTL,MAAAA,SAAS,EAAE;AAHF,KAAb;AAKH;;AAmBDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEP,MAAAA,SAAF;AAAaF,MAAAA,SAAb;AAAwBO,MAAAA,YAAxB;AAAsCF,MAAAA;AAAtC,QAA+D,KAAKG,KAA1E;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKN,SAAS,gBAEN;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFM,gBAIN;AAAA,gCACI,QAAC,SAAD;AAAW,UAAA,WAAW,EAAE,KAAKI;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD;AACI,UAAA,eAAe,EAAEN,SAAS,CAACO,YAAD,CAD9B;AAEI,UAAA,oBAAoB,EAAEF,oBAF1B;AAGI,UAAA,aAAa,EAAE,KAAKF;AAHxB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AA7CuD","sourcesContent":["import React from 'react';\nimport './index.css';\nimport API from '../../utils/API';\nimport { QuestionCard } from '../../components/QuestionCard';\nimport { ButtonBar } from '../../components/ButtonBar';\n\nexport default class TestScreen extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questions: [],\n            currentIndex: 0,\n            isLoading: true\n        }\n    }\n\n    componentDidMount = () => {\n        API.get('mockTest/')\n            .then(res => {\n                this.setState({ questions: res.data, isLoading: false });\n            })\n\n    }\n\n    optionPressed = (optionNumber) => {\n        this.setState({ selectedOptionNumber: optionNumber });\n    }\n\n    nextPressed = () => {\n        const { currentIndex } = this.state;\n        this.setState({ currentIndex: currentIndex + 1, selectedOptionNumber: -1 })\n    }\n\n    render() {\n        const { isLoading, questions, currentIndex, selectedOptionNumber } = this.state;\n        return (\n            <div className=\"container\">\n                {isLoading\n                    ?\n                    <div className=\"loader\">Loading</div>\n                    :\n                    <div>\n                        <ButtonBar nextPressed={this.nextPressed} />\n                        <QuestionCard\n                            questionDetails={questions[currentIndex]}\n                            selectedOptionNumber={selectedOptionNumber}\n                            optionPressed={this.optionPressed} />\n                    </div>\n                }\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}