{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/abhinandan/Texts/mocktest/mocktest-web/src/screens/LoginScreen/index.js\";\nimport React from 'react';\nimport './index.css';\nimport API from '../../utils/API';\nimport { Button } from '../../components/Button';\nexport default class LoginScreen extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onIdChange = () => {\n      this.setState({\n        id: this.id.value\n      });\n    };\n\n    this.onLoginPressed = () => {\n      const {\n        id\n      } = this.state;\n\n      if (!id || !id.length) {\n        alert(\"Please enter User Id\");\n        return;\n      }\n\n      this.setState({\n        loading: true\n      });\n    };\n\n    this.state = {\n      id: '',\n      loading: false\n    };\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label\",\n            children: \"User Id :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: input => this.id = input,\n            className: \"inputBox\",\n            onChange: this.onIdChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginButtonContainer\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.onLoginPressed,\n            text: loading ? \"Loading...\" : \"Login\",\n            backgroundColor: \"#282c34\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hintBox\",\n          children: [\"The app demonstrates online mock-test feature. Since, authenticatication is not integrated, you can login with any one of these ids-\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ids\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"user1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"user2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"user3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/abhinandan/Texts/mocktest/mocktest-web/src/screens/LoginScreen/index.js"],"names":["React","API","Button","LoginScreen","PureComponent","constructor","props","onIdChange","setState","id","value","onLoginPressed","state","length","alert","loading","render","input"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AAEA,eAAe,MAAMC,WAAN,SAA0BH,KAAK,CAACI,aAAhC,CAA8C;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,UARmB,GAQN,MAAM;AACf,WAAKC,QAAL,CAAc;AAAEC,QAAAA,EAAE,EAAE,KAAKA,EAAL,CAAQC;AAAd,OAAd;AACH,KAVkB;;AAAA,SAYnBC,cAZmB,GAYF,MAAM;AACnB,YAAM;AAAEF,QAAAA;AAAF,UAAS,KAAKG,KAApB;;AACA,UAAI,CAACH,EAAD,IAAO,CAACA,EAAE,CAACI,MAAf,EAAuB;AACnBC,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACA;AACH;;AACD,WAAKN,QAAL,CAAc;AAAEO,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAnBkB;;AAEf,SAAKH,KAAL,GAAa;AACTH,MAAAA,EAAE,EAAE,EADK;AAETM,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AAcDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAED,MAAAA;AAAF,QAAc,KAAKH,KAAzB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AACI,YAAA,GAAG,EAAEK,KAAK,IAAI,KAAKR,EAAL,GAAUQ,KAD5B;AAEI,YAAA,SAAS,EAAC,UAFd;AAGI,YAAA,QAAQ,EAAE,KAAKV;AAHnB;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,iCACI,QAAC,MAAD;AACI,YAAA,OAAO,EAAE,KAAKI,cADlB;AAEI,YAAA,IAAI,EAAEI,OAAO,GAAG,YAAH,GAAkB,OAFnC;AAGI,YAAA,eAAe,EAAE;AAHrB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAiBI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,0KAEI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA8BH;;AArDwD","sourcesContent":["import React from 'react';\nimport './index.css';\nimport API from '../../utils/API';\nimport { Button } from '../../components/Button';\n\nexport default class LoginScreen extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            loading: false\n        };\n    }\n\n    onIdChange = () => {\n        this.setState({ id: this.id.value })\n    }\n\n    onLoginPressed = () => {\n        const { id } = this.state;\n        if (!id || !id.length) {\n            alert(\"Please enter User Id\");\n            return;\n        }\n        this.setState({ loading: true })\n    }\n    render() {\n        const { loading } = this.state;\n        return (\n            <div className=\"loginContainer\">\n                <div className=\"loginBox\">\n                    <div className=\"loginRow\">\n                        <div className=\"label\">\n                            User Id :\n                        </div>\n                        <input\n                            ref={input => this.id = input}\n                            className=\"inputBox\"\n                            onChange={this.onIdChange}\n                        />\n                    </div>\n                    <div className=\"loginButtonContainer\">\n                        <Button\n                            onClick={this.onLoginPressed}\n                            text={loading ? \"Loading...\" : \"Login\"}\n                            backgroundColor={\"#282c34\"} />\n                    </div>\n                    <div className=\"hintBox\">\n                        The app demonstrates online mock-test feature. Since, authenticatication is not integrated, you can login with any one of these ids-\n                        <div className=\"ids\">\n                            <div>user1</div>\n                            <div>user2</div>\n                            <div>user3</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}