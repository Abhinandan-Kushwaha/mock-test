{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/abhinandan/Texts/mocktest/mocktest-web/src/components/QuestionCard/index.js\";\nimport React from 'react';\nexport const QuestionCard = props => {\n  const {\n    currentIndex,\n    questions\n  } = props;\n  const {\n    questionNumber,\n    text,\n    isImage,\n    imageUrl\n  } = questions[currentIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questionContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionNumberContainer\",\n        children: questionNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), isImage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionImageContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          className: \"questionImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionTextContainer\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), renderOptions()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = QuestionCard;\n\nconst renderOptions = () => {\n  const {\n    currentIndex,\n    questions\n  } = this.state;\n  const {\n    options\n  } = questions[currentIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"optionsContainer\",\n    children: options.map(option => {\n      const {\n        optionNumber,\n        text,\n        isImage,\n        imageUrl\n      } = option;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"optionsRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"optionNumberContainer\",\n          children: optionNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), isImage ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"optionImageContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            className: \"optionImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"optionTextContainer\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"sources":["/Users/abhinandan/Texts/mocktest/mocktest-web/src/components/QuestionCard/index.js"],"names":["React","QuestionCard","props","currentIndex","questions","questionNumber","text","isImage","imageUrl","renderOptions","state","options","map","option","optionNumber"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACnC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA8BF,KAApC;AACA,QAAM;AAAEG,IAAAA,cAAF;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA;AAAjC,MAA8CJ,SAAS,CAACD,YAAD,CAA7D;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,kBACKE;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKE,OAAO,gBAEJ;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,+BACI;AACI,UAAA,GAAG,EAAEC,QADT;AAEI,UAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFI,gBAQJ;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,kBACKF;AADL;AAAA;AAAA;AAAA;AAAA,cAZR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAiBKG,aAAa,EAjBlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAxBM;KAAMR,Y;;AAyBb,MAAMQ,aAAa,GAAG,MAAM;AACxB,QAAM;AAAEN,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA8B,KAAKM,KAAzC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcP,SAAS,CAACD,YAAD,CAA7B;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,cACKQ,OAAO,CAACC,GAAR,CAAYC,MAAM,IAAI;AACnB,YAAM;AAAEC,QAAAA,YAAF;AAAgBR,QAAAA,IAAhB;AAAsBC,QAAAA,OAAtB;AAA+BC,QAAAA;AAA/B,UAA4CK,MAAlD;AACA,0BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,oBACKC;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIKP,OAAO,gBAEJ;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,iCACI;AACI,YAAA,GAAG,EAAEC,QADT;AAEI,YAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFI,gBAQJ;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,oBACKF;AADL;AAAA;AAAA;AAAA;AAAA,gBAZR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH,KApBA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA5BD","sourcesContent":["import React from 'react';\n\nexport const QuestionCard = (props) => {\n    const { currentIndex, questions } = props;\n    const { questionNumber, text, isImage, imageUrl } = questions[currentIndex];\n    return (\n        <div className=\"questionContainer\">\n            <div className=\"questionHeader\">\n                <div className=\"questionNumberContainer\">\n                    {questionNumber}\n                </div>\n                {isImage\n                    ?\n                    <div className=\"questionImageContainer\">\n                        <img\n                            src={imageUrl}\n                            className=\"questionImage\" />\n                    </div>\n                    :\n                    <div className=\"questionTextContainer\">\n                        {text}\n                    </div>}\n            </div>\n            {renderOptions()}\n        </div>\n    )\n}\nconst renderOptions = () => {\n    const { currentIndex, questions } = this.state;\n    const { options } = questions[currentIndex];\n    return (\n        <div className=\"optionsContainer\">\n            {options.map(option => {\n                const { optionNumber, text, isImage, imageUrl } = option;\n                return (\n                    <div className=\"optionsRow\">\n                        <div className=\"optionNumberContainer\">\n                            {optionNumber}\n                        </div>\n                        {isImage\n                            ?\n                            <div className=\"optionImageContainer\">\n                                <img\n                                    src={imageUrl}\n                                    className=\"optionImage\" />\n                            </div>\n                            :\n                            <div className=\"optionTextContainer\">\n                                {text}\n                            </div>}\n                    </div>\n                )\n            })}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}