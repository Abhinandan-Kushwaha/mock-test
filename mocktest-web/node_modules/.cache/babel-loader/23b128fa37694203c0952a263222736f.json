{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/abhinandan/Texts/mocktest/mocktest-web/src/components/TestScreen/index.js\";\nimport React from 'react';\nimport './index.css';\nimport API from '../../utils/API';\nexport default class TestScreen extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      API.get('mockTest/').then(res => {\n        this.setState({\n          questions: res.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      questions: [],\n      currentIndex: 0,\n      isLoading: true\n    };\n  }\n\n  render() {\n    const {\n      currentIndex,\n      questions,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"This is the Test Screeen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: 200\n        },\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: questions[currentIndex].text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/abhinandan/Texts/mocktest/mocktest-web/src/components/TestScreen/index.js"],"names":["React","API","TestScreen","PureComponent","constructor","props","componentDidMount","get","then","res","setState","questions","data","isLoading","state","currentIndex","render","width","height","text"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,eAAe,MAAMC,UAAN,SAAyBF,KAAK,CAACG,aAA/B,CAA6C;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,iBATmB,GASC,YAAY;AAC5BL,MAAAA,GAAG,CAACM,GAAJ,CAAQ,WAAR,EACKC,IADL,CACUC,GAAG,IAAI;AACT,aAAKC,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAEF,GAAG,CAACG,IAAjB;AAAuBC,UAAAA,SAAS,EAAE;AAAlC,SAAd;AACH,OAHL;AAKH,KAfkB;;AAEf,SAAKC,KAAL,GAAa;AACTH,MAAAA,SAAS,EAAE,EADF;AAETI,MAAAA,YAAY,EAAE,CAFL;AAGTF,MAAAA,SAAS,EAAE;AAHF,KAAb;AAKH;;AAUDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAED,MAAAA,YAAF;AAAgBJ,MAAAA,SAAhB;AAA2BE,MAAAA;AAA3B,QAAyC,KAAKC,KAApD;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAAZ;AAAA,kBACKL,SAAS,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADM,gBAEN;AAAA,oBAAMF,SAAS,CAACI,YAAD,CAAT,CAAwBI;AAA9B;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAhCuD","sourcesContent":["import React from 'react';\nimport './index.css';\nimport API from '../../utils/API';\n\nexport default class TestScreen extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questions: [],\n            currentIndex: 0,\n            isLoading: true\n        }\n    }\n\n    componentDidMount = async () => {\n        API.get('mockTest/')\n            .then(res => {\n                this.setState({ questions: res.data, isLoading: false });\n            })\n\n    }\n\n    render() {\n        const { currentIndex, questions, isLoading } = this.state;\n        return (\n            <div className=\"container\">\n                <div>\n                    This is the Test Screeen\n                </div>\n                <div style={{ width: '100%', height: 200 }}>\n                    {isLoading ?\n                        <div>Loading</div> :\n                        <div>{questions[currentIndex].text}</div>}\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}